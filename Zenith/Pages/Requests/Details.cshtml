@page "{id:int}"
@model Zenith.Pages.Requests.DetailsModel

@{
    ViewData["Title"] = "- Details";
}

<h2>Details</h2>

<div>
    <h4>Request</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Request.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Request.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Request.DateOfToday)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Request.DateOfToday)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Request.DateOfRequest)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Request.DateOfRequest)
        </dd>
            @if (User.IsInRole("RequestAdministrators") || User.IsInRole("RequestManagers"))
            {
            <dt>
                @Html.DisplayNameFor(model => model.Request.Reason)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Request.Reason)
            </dd>
            }
        <dt>
            @Html.DisplayNameFor(model => model.Request.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Request.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Request.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Request.Status)
        </dd>
    </dl>
</div>

@if (Model.Request.Status != RequestStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
       User, Model.Request, RequestOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Request.RequestId" />
            <input type="hidden" name="status" value="@RequestStatus.Approved" />
            <button type="submit" class="btn btn-success">Approve</button>
        </form>
    }
}

@if (Model.Request.Status != RequestStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
       User, Model.Request, RequestOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Request.RequestId" />
            <input type="hidden" name="status" value="@RequestStatus.Rejected" />
            <button type="submit" class="btn btn-danger">Reject</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
           User, Model.Request,
           RequestOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Request.RequestId">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>